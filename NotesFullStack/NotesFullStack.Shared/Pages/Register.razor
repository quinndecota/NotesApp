@page "/register"
@inject NavigationManager NavigationManager
@inject IAuthService AuthService

<div class="flex h-screen w-screen content-center items-center justify-center bg-gray-100">
    <div class="rounded-md bg-white p-5 shadow" >
        <h1>Register</h1>
        <EditForm Model="_registerModel" OnValidSubmit="RegisterAsync">
            <DataAnnotationsValidator />
            <div class="spave-y-3">
                <div>
                    <label>Name</label>
                    <InputText @bind-Value="_registerModel.Name" class="w-full px-2 py-1" placeholder="Enter Name" />
                    <ValidationMessage For="() => _registerModel.Name" class="text-red-700" />

                </div>
                <div>
                    <label>Email</label>
                    <InputText @bind-Value="_registerModel.Email" class="w-full px-2 py-1" placeholder="Enter Email" />
                    <ValidationMessage For="() => _registerModel.Email" class="text-red-700" />

                </div>

                <div class="">

                    <label>Password</label>
                    <InputText @bind-Value="_registerModel.Password" class="password w-full px-2 py-1" placeholder="Enter Password" />
                    <ValidationMessage For="() => _registerModel.Password" class="text-red-700" />

                </div>

                @if (_errorMessage is not null)
                {
                    <p class="p3 flex justify-between bg-red-400">
                        <label>@_errorMessage</label>
                        
                        <button type="button" @onclick="() => _errorMessage=null" class="font-bold">X</button>
                    </p>
                }

                <div class="">

                    <button type="submit" class="w-full rounded-md bg-blue-700 text-center text-white hover:bg-blend-darken">Register</button>
                    <hr />
                    <NavLink href="login" class="text-blue-700">Existing User? Click here.</NavLink>

                </div>
            </div>
        </EditForm>

    </div>
</div>
@code {
    private RegisterModel _registerModel = new();
    private string? _errorMessage;
    private async Task RegisterAsync()
    {

        var result = await AuthService.RegisterAsync(_registerModel);

        if(!result.IsSuccess)
        {
            //Error
            _errorMessage = result.Error;

            return;
        }
        //Success
        NavigationManager.NavigateTo("login");
    }
}
